async function syncPendingStories(){const e=await getAllPendingStories();if(!e.length)return console.log("[SYNC] Tidak ada pending stories untuk disinkronkan."),!1;let t=!1;for(const i of e)if(i.photoFile)try{console.log("[SYNC] Mengirim pending story ke API:",i);const e=await API.addStory({description:i.description,lat:i.lat,lon:i.lon,photoFile:i.photoFile});console.log("[SYNC] Berhasil menambah story ke server:",e),await deletePendingStory(i.localId),t=!0}catch(e){console.error("[SYNC] Gagal mengirim pending story:",i,e)}else console.warn("[SYNC] Pending story tidak punya photoFile, tidak bisa dikirim ke server:",i),await deletePendingStory(i.localId);return t}import"leaflet/dist/leaflet.css";import L from"leaflet";import{fixLeafletIcons}from"../utils/fixLeafletIcons";import API from"../data/api.js";import HomeView from"../views/HomeView.js";import{saveStories as saveStoriesIDB,getAllStories as getAllStoriesIDB,deleteStory as deleteStoryIDB,getAllPendingStories,deletePendingStory}from"../utils/idb-helper.js";const HomePresenter={async init(){async function e(){return!(!navigator.onLine||!await syncPendingStories())&&(await HomePresenter.init(),!0)}window.addEventListener("online",(()=>{e()})),fixLeafletIcons();const t=HomeView.getStoryListContainer(),i=HomeView.getMapElement();let o=null;if(t)if(navigator.onLine){if(!await e())try{const e=await API.getAllStories();await saveStoriesIDB(e);const n=()=>{t&&(HomeView.clearLoading(t),HomeView.renderStories(t,e,{onSave:async e=>{(await getAllStoriesIDB()).find((t=>t.id===e.id))?alert("Cerita sudah ada di daftar tersimpan."):(await saveStoriesIDB([e]),alert("Cerita berhasil disimpan!"))}}))};if(HomeView.runViewTransition(n),i){o=L.map(i).setView([-2.5489,118.0149],4);const t=L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"&copy; OpenStreetMap contributors"}),n=L.tileLayer("https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png",{attribution:"&copy; OpenTopoMap contributors"});t.addTo(o),L.control.layers({OpenStreetMap:t,OpenTopoMap:n},{},{collapsed:!1}).addTo(o),HomeView.addStoryMarkers(o,e)}}catch(e){await n(),o&&o.remove()}}else await n();async function n(){if(!t)return;const e=await getAllStoriesIDB(),i=[...(await getAllPendingStories()).map((e=>({...e,id:"pending-"+e.localId,name:e.name||"Offline User",photoUrl:e.photoUrl||"",createdAt:e.createdAt||Date.now()}))),...e];HomeView.clearLoading(t),HomeView.renderStories(t,i,{offline:!0,onDelete:async e=>{e.startsWith("pending-")?await deletePendingStory(Number(e.replace("pending-",""))):await deleteStoryIDB(e),n()}})}}};export default HomePresenter;