const VAPID_PUBLIC_KEY="BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk";function urlBase64ToUint8Array(e){const r=(e+"=".repeat((4-e.length%4)%4)).replace(/-/g,"+").replace(/_/g,"/"),s=window.atob(r),i=new Uint8Array(s.length);for(let e=0;e<s.length;++e)i[e]=s.charCodeAt(e);return i}export async function registerServiceWorker(){if("serviceWorker"in navigator){const e=window.location.pathname.includes("/StoryApp2")?"/StoryApp2/sw.js":"/sw.js";console.log("[PushNotif] Registering service worker at:",e);try{const r=await navigator.serviceWorker.register(e);return console.log("[PushNotif] Service worker registered:",r),r}catch(e){throw console.error("[PushNotif] Failed to register service worker:",e),e}}throw new Error("Service Worker not supported")}export async function subscribePushNotification(e){if(console.log("[PushNotif] Mulai subscribe push notification..."),await registerServiceWorker(),!("PushManager"in window))throw new Error("Push not supported");const r=await navigator.serviceWorker.ready;let s;try{s=await r.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:urlBase64ToUint8Array(VAPID_PUBLIC_KEY)}),console.log("[PushNotif] Subscription berhasil:",s)}catch(e){throw console.error("[PushNotif] Gagal subscribe:",e),alert("Gagal subscribe push notification: "+(e.message||e)),e}try{const r=s.toJSON?s.toJSON():JSON.parse(JSON.stringify(s));"expirationTime"in r&&delete r.expirationTime;const i=await fetch("https://story-api.dicoding.dev/v1/notifications/subscribe",{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify(r)}),t=await i.json().catch((()=>({})));if(!i.ok)throw console.error("[PushNotif] API subscribe gagal:",t),alert("Gagal subscribe ke server: "+(t.message||i.statusText)),new Error(t.message||i.statusText);console.log("[PushNotif] Subscription ke server berhasil:",t)}catch(e){throw console.error("[PushNotif] Gagal kirim subscription ke server:",e),alert("Gagal subscribe ke server: "+(e.message||e)),e}return s}export async function unsubscribePushNotification(e){console.log("[PushNotif] Mulai unsubscribe push notification..."),await registerServiceWorker();const r=await navigator.serviceWorker.ready,s=await r.pushManager.getSubscription();if(s){try{const r=await fetch("https://story-api.dicoding.dev/v1/notifications/subscribe",{method:"DELETE",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify({endpoint:s.endpoint})}),i=await r.json().catch((()=>({})));if(!r.ok)throw console.error("[PushNotif] API unsubscribe gagal:",i),alert("Gagal unsubscribe ke server: "+(i.message||r.statusText)),new Error(i.message||r.statusText);console.log("[PushNotif] Unsubscribe ke server berhasil:",i)}catch(e){throw console.error("[PushNotif] Gagal kirim unsubscribe ke server:",e),alert("Gagal unsubscribe ke server: "+(e.message||e)),e}try{const e=await s.unsubscribe();console.log("[PushNotif] Unsubscribe dari browser berhasil:",e)}catch(e){console.error("[PushNotif] Gagal unsubscribe dari browser:",e),alert("Gagal unsubscribe dari browser: "+(e.message||e))}const i=await r.pushManager.getSubscription();if(i)try{await i.unsubscribe()}catch{}}else console.log("[PushNotif] Tidak ada subscription yang aktif.")}export async function isPushSubscribed(){if(!("serviceWorker"in navigator))return!1;const e=await navigator.serviceWorker.getRegistration();return!!e&&!!await e.pushManager.getSubscription()}